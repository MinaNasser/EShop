@{
    Layout = "_AdminLayout";
    var list = ViewData["CategoriesList"] as List<SelectListItem>;
    bool canNext = !(Model.PageNumber * Model.PageSize < Model.Total);
    bool canBack = Model.PageNumber <= 1;

    int PageCount = (int)Math.Ceiling((double)Model.Total / Model.PageSize);
}
@model PaginationViewModel<ProductDetailsViewModel>

<h1 class="mt-4 mb-4" style="color: #023059;">Product List</h1>
<div class="container mb-4">
    <form asp-action="Index" method="get" class="row g-3" id="filterForm">

        <div class="col-md-4">
            <input type="text" name="searchText" class="form-control" placeholder="Search by name or description"
                   value="@Context.Request.Query["searchText"]" oninput="autoSubmit()" />
        </div>

        <div class="col-md-2">
            <input type="number" name="price" class="form-control" placeholder="Max Price"
                   value="@Context.Request.Query["price"]" oninput="autoSubmit()" />
        </div>

        <div class="col-md-3">
            <select name="categoryId" class="form-select" onchange="autoSubmit()">
                <option value="">Select Category</option>
                @foreach (var cat in ViewBag.CategoriesList)
                {
                    @if (Context.Request.Query["categoryId"] == cat.Value)
                    {
                        <option value="@cat.Value" selected>@cat.Text</option>
                    }
                    else
                    {
                        <option value="@cat.Value">@cat.Text</option>
                    }
                }
            </select>
        </div>

        <div class="col-md-2">
            <button type="submit" class="btn"
                    style="background-color: #efb036; color: #023059; font-weight: bold;">
                Apply Filters
            </button>
        </div>

        <!-- Hidden Input for Page Number -->
        <input type="hidden" name="pageNumber" value="@Model.PageNumber" />
    </form>
</div>


<div class="container">
    <div class="row">
        @foreach (var prd in Model.Data)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100 shadow-sm" style="border: 1px solid #9197b3; border-radius: 12px;">

                    <!-- Carousel -->
                    <div id="carousel-@prd.Id" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @if (prd.Images != null && prd.Images.Any())
                            {
                                var isFirst = true;
                                foreach (var img in prd.Images)
                                {
                                    <div class="carousel-item @(isFirst ? "active" : "")">
                                        <img src="@img" class="d-block w-100" alt="@prd.Name" style="border-radius: 12px 12px 0 0; height: 250px; object-fit: cover;" />
                                    </div>
                                    isFirst = false;
                                }
                            }
                            else
                            {
                                <div class="carousel-item active">
                                    <img src="/images/default.jpg" class="d-block w-100 h-50" alt="@prd.Name" style="border-radius: 12px 12px 0 0; height: 250px; object-fit: cover;" />
                                </div>
                            }
                        </div>

                        <!-- Controls -->
                        @if (prd.Images != null && prd.Images.Count > 1)
                        {
                            <button class="carousel-control-prev" type="button" data-bs-target="#carousel-@prd.Id" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#carousel-@prd.Id" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        }
                    </div>

                    <!-- Product Details -->
                    <div class="card-body" style="background-color: #f7f7f8;">
                        <h5 class="card-title" style="color: #023059; font-weight: bold;">@prd.Name</h5>
                        <p class="card-text" style="color: #9197b3;">@prd.Description</p>
                        <p class="card-text" style="color: #023059;">Provided by: <span style="color: #efb036;">@prd.VendorName</span></p>
                        <p class="card-text" style="color: #023059;">Category: <span style="color: #efb036;">@prd.CategoryName</span></p>
                        <p class="card-text" style="color: #023059;">Price: <strong>$@prd.Price</strong></p>
                        <p class="card-text" style="color: #023059;">Quantity: @prd.Quantity in stock</p>
                    </div>

                    <!-- Buttons -->
                    <div class="card-footer text-center" style="background-color: #f7f7f8; border-top: 1px solid #9197b3;">
                        <!-- Edit Product -->
                        <a asp-controller="Product" asp-action="Edit" asp-route-id="@prd.Id" class="btn mb-2"
                           style="background-color: #efb036; color: #023059; border: none; font-weight: bold; width: 45%;"
                           onmouseover="this.style.backgroundColor='#023059'; this.style.color='white';"
                           onmouseout="this.style.backgroundColor='#efb036'; this.style.color='#023059';">
                            <i class="bi bi-pencil-square"></i> Edit
                        </a>

                        <!-- Delete Product -->
                        <form method="Get" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this product?');">
                            <input type="hidden" name="id" value="@prd.Id" />
                            <button asp-controller="Product" asp-action="Delete" type="submit" asp-route-id="@prd.Id"
                                    class="btn mb-2" style="background-color: #023059; color: white; border: none; width: 45%; font-weight: bold;">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </form>
                    </div>

                </div>
            </div>
        }
    </div>
</div>

<!-- Pagination Buttons -->
<div class="d-flex justify-content-center align-items-center mt-4">
    <button class="btn btn-primary mx-1" style="background-color: #efb036; color: #023059; font-weight: bold;"  onclick="page('back')" @(canBack ? "disabled" : "")>Back</button>

    @for (int i = 1; i <= PageCount; i++)
    {
        <button style="background-color: #023059; color: white; font-weight: bold;" class="btn btn-primary mx-1 @(Model.PageNumber == i ? "active" : "")" onclick="page(@i)">
            @i
        </button>
    }

    <button class="btn btn-primary mx-1" style="background-color: #efb036; color: #023059; font-weight: bold;" onclick="page('next')" @(canNext ? "disabled" : "")>Next</button>
</div>

@section scripts {
    <script>
        let form = document.getElementById("filterForm");

        function page(btn) {
            if (btn === "next") {
                form.pageNumber.value++;
            } else if (btn === "back") {
                form.pageNumber.value--;
            } else {
                form.pageNumber.value = btn;
            }
            form.submit();
        }

        // Auto Submit with delay
        let timeout;
        function autoSubmit() {
            clearTimeout(timeout);
            timeout = setTimeout(() => {
                form.pageNumber.value = 1; // Reset to page 1
                form.submit();
            }, 500); // Delay 500ms to avoid too many requests
        }
    </script>
}

